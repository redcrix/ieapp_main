{"version":3,"sources":["webpack:///./src/app/pages/notifications/notifications.module.ts","webpack:///./src/app/pages/notifications/notifications.page.html","webpack:///./src/app/pages/notifications/notifications.page.scss","webpack:///./src/app/pages/notifications/notifications.page.ts","webpack:///./src/app/services/notification.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEY;AAEW;AAEpE,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qEAAiB;KAC7B;CACF,CAAC;AAYF;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QAVnC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4EAAe;gBACf,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qEAAiB,CAAC;SAClC,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;AC5BpC,2LAA2L,6CAA6C,+EAA+E,uCAAuC,wHAAwH,2PAA2P,gCAAgC,kHAAkH,2BAA2B,mDAAmD,wCAAwC,4gBAA4gB,0CAA0C,uHAAuH,8PAA8P,+BAA+B,kHAAkH,0BAA0B,mDAAmD,uCAAuC,4gBAA4gB,2CAA2C,wHAAwH,gQAAgQ,gCAAgC,kHAAkH,2BAA2B,mDAAmD,wCAAwC,wiB;;;;;;;;;;;ACAh0G,+BAA+B,oBAAoB,mBAAmB,qBAAqB,EAAE,sBAAsB,iBAAiB,eAAe,kBAAkB,oBAAoB,mBAAmB,EAAE,eAAe,iBAAiB,eAAe,kBAAkB,oBAAoB,iBAAiB,EAAE,cAAc,6BAA6B,mCAAmC,8BAA8B,wBAAwB,mCAAmC,EAAE,eAAe,oBAAoB,qBAAqB,mBAAmB,gBAAgB,iBAAiB,qBAAqB,EAAE,eAAe,oBAAoB,mBAAmB,4BAA4B,wBAAwB,EAAE,uBAAuB,qBAAqB,EAAE,oBAAoB,qBAAqB,uBAAuB,EAAE,cAAc,6BAA6B,mCAAmC,8BAA8B,wBAAwB,mCAAmC,EAAE,uDAAuD,wBAAwB,EAAE,YAAY,qBAAqB,EAAE,+CAA+C,uvF;;;;;;;;;;;;;;;;;;;;;;ACAxlC;AACY;AACY;AAChB;AAC7B;AAO7B;IAKE,2BACU,WAA0B,EAC1B,iBAAsC,EACtC,SAAsB;QAFtB,gBAAW,GAAX,WAAW,CAAe;QAC1B,sBAAiB,GAAjB,iBAAiB,CAAqB;QACtC,cAAS,GAAT,SAAS,CAAa;QANhC,YAAO,GAAQ,EAAE,CAAC;QAClB,kBAAa,GAAQ,EAAE,CAAC;IAMpB,CAAC;IAEL,oCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,sCAAU,GAAV;QAAA,iBAQC;QAPC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YACrE,KAAI,CAAC,OAAO,GAAG,kDAAG,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;YACpC,KAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;QAC9C,CAAC,EAAE,aAAG;YACJ,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,GAAG,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAW,GAAX,UAAY,cAAc;QACxB,IAAI,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAC/B,IAAI,OAAO,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,OAAO,EAAE,CAAC;QAEjD,IAAI,GAAG,GAAG,OAAO,EAAE;YACjB,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAC,OAAO,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC;YACxD,IAAI,QAAQ,GAAG,CAAC,GAAG,GAAC,OAAO,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;YAChD,IAAI,IAAI,KAAK,CAAC,EAAE;gBACd,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,GAAC,OAAO,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,YAAY,CAAC;aAC/D;iBAAM,IAAG,IAAI,GAAG,CAAC,IAAI,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE;gBAChD,IAAI,IAAI,KAAK,CAAC,EAAE;oBACd,OAAO,WAAW,CAAC;iBACpB;qBAAM;oBACL,IAAI,MAAI,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;oBAC1F,OAAO,MAAI,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;iBAChD;aACF;iBAAM;gBACL,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAC,OAAO,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;aACzE;SACF;aAAM;YACL,OAAO,EAAE,CAAC;SACX;IACH,CAAC;IAED,4CAAgB,GAAhB,UAAiB,YAAY;QAA7B,iBAWC;QAVC,IAAI,KAAK,GAAG;YACV,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM;YAC/B,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;SAC1B,CAAC;QACF,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7E,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;YACpC,KAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,EAAE,aAAG;YACJ,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;QACjC,CAAC,CAAC;IACJ,CAAC;IAED,4CAAgB,GAAhB;QAAA,iBAOC;QANC,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,cAAI;YACxE,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;YACzC,KAAI,CAAC,aAAa,GAAG,kDAAG,CAAC,IAAI,EAAE,eAAe,EAAE,EAAE,CAAC,CAAC;QACtD,CAAC,EAAE,aAAG;YACJ,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;IArEU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,uHAAwC;;SAEzC,CAAC;+EAOuB,sEAAa;YACP,kFAAmB;YAC3B,kEAAW;OARrB,iBAAiB,CAuE7B;IAAD,wBAAC;CAAA;AAvE6B;;;;;;;;;;;;;;;;;;;;;ACXa;AACO;AACD;AACY;AAK7D;IAEE,6BACU,IAAgB,EAChB,WAA0B;QAD1B,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAe;IAChC,CAAC;IAEL,8CAAgB,GAAhB,UAAiB,KAAU;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qEAAW,CAAC,MAAM,IAAG,yBAAuB,IAAI,CAAC,WAAW,CAAC,MAAM,eAAU,KAAO,EAAC,CAAC;IAC7G,CAAC;IAED,+CAAiB,GAAjB,UAAkB,cAAmB,EAAE,KAAU;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,MAAM,IAAG,wBAAsB,cAAgB,GAAE,KAAK,CAAC,CAAC;IAC5F,CAAC;IAbU,mBAAmB;QAH/B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAIgB,+DAAU;YACH,6DAAa;OAJzB,mBAAmB,CAe/B;IAAD,0BAAC;CAAA;AAf+B","file":"notifications-notifications-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotificationsPage } from './notifications.page';\n\nimport { ComponentModule } from '../../components/component.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [NotificationsPage]\n})\nexport class NotificationsPageModule {}\n","module.exports = \"<ion-content>\\n  <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-2\\\"></div>\\n      <div class=\\\"col-md-8\\\">\\n        <h1 class=\\\"title\\\">{{ 'notifications.notifications' | translate }}</h1>\\n\\n        <!--TODAY-->\\n        <div class=\\\"title-noti\\\">\\n          {{ 'notifications.todayCL' | translate }}\\n        </div>\\n        <div class=\\\"box-noti-item\\\">\\n          <div *ngFor=\\\"let todayNotification of notifications; let i=index\\\">\\n            <ion-row *ngIf=\\\"todayNotification.date_group === 'TODAY'\\\">\\n              <ion-col size=\\\"10\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-avatar slot=\\\"start\\\">\\n                    <img src=\\\"{{todayNotification.author_image}}\\\">\\n                  </ion-avatar>\\n                  <ion-label>\\n                    <h2 class=\\\"noti-one\\\">{{todayNotification.message}}</h2>\\n                    <p class=\\\"noti-two\\\">{{getDuration(todayNotification.created)}}</p>\\n                  </ion-label>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col class=\\\"column-center\\\" size=\\\"2\\\">\\n                <div class=\\\"row-noti-recent\\\">\\n                  <ion-icon name=\\\"ios-close\\\" (click)=\\\"readNotification(todayNotification)\\\"></ion-icon>\\n                </div>\\n              </ion-col>\\n            </ion-row>\\n          </div>\\n        </div>\\n        <hr class=\\\"hr-noti\\\">\\n        <!--THIS WEEK-->\\n        <div class=\\\"title-noti\\\">\\n          {{ 'notifications.thisWeekCL' | translate }}\\n        </div>\\n        <div class=\\\"box-noti-item\\\">\\n          <div *ngFor=\\\"let weekNotification of notifications; let i=index\\\">\\n            <ion-row *ngIf=\\\"weekNotification.date_group === 'THIS WEEK'\\\">\\n              <ion-col size=\\\"10\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-avatar slot=\\\"start\\\">\\n                    <img src=\\\"{{weekNotification.author_image}}\\\">\\n                  </ion-avatar>\\n                  <ion-label>\\n                    <h2 class=\\\"noti-one\\\">{{weekNotification.message}}</h2>\\n                    <p class=\\\"noti-two\\\">{{getDuration(weekNotification.created)}}</p>\\n                  </ion-label>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col class=\\\"column-center\\\" size=\\\"2\\\">\\n                <div class=\\\"row-noti-recent\\\">\\n                  <ion-icon name=\\\"ios-close\\\" (click)=\\\"readNotification(weekNotification)\\\"></ion-icon>\\n                </div>\\n              </ion-col>\\n            </ion-row>\\n          </div>\\n        </div>\\n        <hr class=\\\"hr-noti\\\">\\n        <!--THIS MONTH-->\\n        <div class=\\\"title-noti\\\">\\n          {{ 'notifications.thisMonthCL' | translate }}\\n        </div>\\n        <div class=\\\"box-noti-item\\\">\\n          <div *ngFor=\\\"let monthNotification of notifications; let i=index\\\">\\n            <ion-row *ngIf=\\\"monthNotification.date_group === 'THIS MONTH'\\\">\\n              <ion-col size=\\\"10\\\">\\n                <ion-item lines=\\\"none\\\">\\n                  <ion-avatar slot=\\\"start\\\">\\n                    <img src=\\\"{{monthNotification.author_image}}\\\">\\n                  </ion-avatar>\\n                  <ion-label>\\n                    <h2 class=\\\"noti-one\\\">{{monthNotification.message}}</h2>\\n                    <p class=\\\"noti-two\\\">{{getDuration(monthNotification.created)}}</p>\\n                  </ion-label>\\n                </ion-item>\\n              </ion-col>\\n              <ion-col class=\\\"column-center\\\" size=\\\"2\\\">\\n                <div class=\\\"row-noti-recent\\\">\\n                  <ion-icon name=\\\"ios-close\\\" (click)=\\\"readNotification(monthNotification)\\\"></ion-icon>\\n                </div>\\n              </ion-col>\\n            </ion-row>\\n          </div>\\n        </div>\\n        <div class=\\\"margin-bottom\\\"></div>\\n      </div>\\n      <div class=\\\"col-md-2\\\"></div>\\n    </div>\\n  </div>\\n</ion-content>\"","module.exports = \".title-noti {\\n  font-size: 14pt;\\n  color: #222428;\\n  margin-top: 27pt; }\\n\\n.row-noti-recent {\\n  margin: auto;\\n  width: 50%;\\n  padding: 25px;\\n  font-size: 30pt;\\n  color: #d8d8d8; }\\n\\n.row-back {\\n  margin: auto;\\n  width: 50%;\\n  padding: 20px;\\n  font-size: 21pt;\\n  color: black; }\\n\\n.hr-noti {\\n  width: 1500px !important;\\n  background: #e0e0e0 !important;\\n  display: block !important;\\n  margin-left: -400px;\\n  visibility: visible !important; }\\n\\n.noti-one {\\n  font-size: 16pt;\\n  font-family: 600;\\n  display: block;\\n  width: 100%;\\n  height: 50px;\\n  overflow: hidden; }\\n\\n.noti-two {\\n  font-size: 12pt;\\n  color: #9b9b9b;\\n  text-overflow: ellipsis;\\n  white-space: nowrap; }\\n\\n.item-noti-margin {\\n  margin-top: 21pt; }\\n\\n.box-noti-item {\\n  margin-top: 21pt;\\n  margin-left: -15px; }\\n\\n.hr-noti {\\n  width: 1500px !important;\\n  background: #e0e0e0 !important;\\n  display: block !important;\\n  margin-left: -400px;\\n  visibility: visible !important; }\\n\\n.item.sc-ion-label-md-h, .item .sc-ion-label-md-h {\\n  white-space: normal; }\\n\\n.title {\\n  margin-top: 78pt; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FrNDcvaWVhcHAvc3JjL2FwcC9wYWdlcy9ub3RpZmljYXRpb25zL25vdGlmaWNhdGlvbnMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBZTtFQUNmLGNBQXNCO0VBQ3RCLGdCQUFnQixFQUFBOztBQU1wQjtFQUNJLFlBQVk7RUFDWixVQUFVO0VBQ1YsYUFBYTtFQUNiLGVBQWU7RUFDZixjQUF5QixFQUFBOztBQUc3QjtFQUNJLFlBQVk7RUFDWixVQUFVO0VBQ1YsYUFBYTtFQUNiLGVBQWU7RUFDZixZQUFZLEVBQUE7O0FBR2hCO0VBQ0ksd0JBQXdCO0VBQ3hCLDhCQUF5QztFQUN6Qyx5QkFBeUI7RUFDekIsbUJBQW1CO0VBQ25CLDhCQUE4QixFQUFBOztBQUlsQztFQUNJLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsY0FBaUM7RUFDakMsV0FBZ0M7RUFDaEMsWUFBZ0M7RUFDaEMsZ0JBQWtDLEVBQUE7O0FBR3RDO0VBQ0ksZUFBZTtFQUNmLGNBQXlCO0VBQ3pCLHVCQUF1QjtFQUFDLG1CQUFtQixFQUFBOztBQUkvQztFQUNJLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLGdCQUFnQjtFQUNoQixrQkFBa0IsRUFBQTs7QUFHdEI7RUFDSSx3QkFBd0I7RUFDeEIsOEJBQXlDO0VBQ3pDLHlCQUF5QjtFQUN6QixtQkFBbUI7RUFDbkIsOEJBQThCLEVBQUE7O0FBSWxDO0VBQ0ssbUJBQW1CLEVBQUE7O0FBR3hCO0VBQ0ksZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9ub3RpZmljYXRpb25zL25vdGlmaWNhdGlvbnMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRpdGxlLW5vdGl7XG4gICAgZm9udC1zaXplOiAxNHB0O1xuICAgIGNvbG9yOiByZ2IoMzQsIDM2LCA0MCk7XG4gICAgbWFyZ2luLXRvcDogMjdwdDtcbn1cblxuXG5cblxuLnJvdy1ub3RpLXJlY2VudHtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgd2lkdGg6IDUwJTtcbiAgICBwYWRkaW5nOiAyNXB4O1xuICAgIGZvbnQtc2l6ZTogMzBwdDtcbiAgICBjb2xvcjogcmdiKDIxNiwgMjE2LCAyMTYpO1xufVxuXG4ucm93LWJhY2t7XG4gICAgbWFyZ2luOiBhdXRvO1xuICAgIHdpZHRoOiA1MCU7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBmb250LXNpemU6IDIxcHQ7XG4gICAgY29sb3I6IGJsYWNrO1xufVxuXG4uaHItbm90aXtcbiAgICB3aWR0aDogMTUwMHB4ICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZDogcmdiKDIyNCwgMjI0LCAyMjQpICFpbXBvcnRhbnQ7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgICBtYXJnaW4tbGVmdDogLTQwMHB4OyBcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlICFpbXBvcnRhbnQ7XG59XG5cblxuLm5vdGktb25le1xuICAgIGZvbnQtc2l6ZTogMTZwdDtcbiAgICBmb250LWZhbWlseTogNjAwO1xuICAgIGRpc3BsYXk6ICAgICAgICAgICAgICAgICAgICBibG9jaztcbiAgICB3aWR0aDogICAgICAgICAgICAgICAgICAgICAgMTAwJTtcbiAgICBoZWlnaHQ6ICAgICAgICAgICAgICAgICAgICAgNTBweDtcbiAgICBvdmVyZmxvdzogICAgICAgICAgICAgICAgICAgaGlkZGVuO1xufVxuXG4ubm90aS10d297XG4gICAgZm9udC1zaXplOiAxMnB0O1xuICAgIGNvbG9yOiByZ2IoMTU1LCAxNTUsIDE1NSk7XG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7d2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cblxuXG4uaXRlbS1ub3RpLW1hcmdpbntcbiAgICBtYXJnaW4tdG9wOiAyMXB0O1xufVxuXG4uYm94LW5vdGktaXRlbXtcbiAgICBtYXJnaW4tdG9wOiAyMXB0O1xuICAgIG1hcmdpbi1sZWZ0OiAtMTVweDtcbn1cblxuLmhyLW5vdGl7XG4gICAgd2lkdGg6IDE1MDBweCAhaW1wb3J0YW50O1xuICAgIGJhY2tncm91bmQ6IHJnYigyMjQsIDIyNCwgMjI0KSAhaW1wb3J0YW50O1xuICAgIGRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG4gICAgbWFyZ2luLWxlZnQ6IC00MDBweDsgXG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZSAhaW1wb3J0YW50O1xufVxuXG5cbi5pdGVtLnNjLWlvbi1sYWJlbC1tZC1oLCAuaXRlbSAuc2MtaW9uLWxhYmVsLW1kLWgge1xuICAgICB3aGl0ZS1zcGFjZTogbm9ybWFsOyBcbn1cblxuLnRpdGxle1xuICAgIG1hcmdpbi10b3A6IDc4cHQ7XG59XG5cblxuXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { GlobalService } from '../../services/global.service';\nimport { NotificationService } from '../../services/notification.service';\nimport { UserService } from '../../services/user.service';\nimport { get } from 'lodash';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.page.html',\n  styleUrls: ['./notifications.page.scss'],\n})\nexport class NotificationsPage implements OnInit {\n\n  profile: any = {};\n  notifications: any = [];\n\n  constructor(\n    private _globalServ: GlobalService,\n    private _notificationServ: NotificationService,\n    private _userServ: UserService,\n  ) { }\n\n  ngOnInit() {\n    this.getProfile();\n  }\n\n  getProfile() {\n    this._userServ.getPublicProfile(this._globalServ.idUser).subscribe(data => {\n      this.profile = get(data, '[0]', {});\n      this.getNotifications();\n      console.log('this.profile: ', this.profile);\n    }, err => {\n      console.log('profile err:', err);\n    });\n  }\n\n  getDuration(createdDateStr) {\n    let now = new Date().getTime();\n    let created = new Date(createdDateStr).getTime();\n\n    if (now > created) {\n      let days = Math.round((now-created) / 3600 / 1000 / 24);\n      let origDays = (now-created) / 3600 / 1000 / 24;\n      if (days === 0) {\n        return Math.round((now-created) / 3600 / 1000) + ' hours ago';\n      } else if(days > 0 && origDays <= 6 && days <= 6) {\n        if (days === 1) {\n          return 'yesterday';\n        } else {\n          let days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n          return days[new Date(createdDateStr).getDay()];\n        }\n      } else {\n        return Math.round(((now-created) / 3600 / 1000 / 24 / 7)) + ' week ago';\n      }\n    } else {\n      return '';\n    }\n  }\n\n  readNotification(notification) {\n    let param = {\n      userId: this._globalServ.idUser,\n      email: this.profile.email\n    };\n    this._notificationServ.readNotifications(notification.id, param).subscribe(data => {\n      console.log('read success: ', data);\n      this.getNotifications();\n    }, err => {\n      console.log('read err: ', err);\n    })\n  }\n\n  getNotifications() {\n    this._notificationServ.getNotifications(this.profile.email).subscribe(data => {\n      console.log('notification data: ', data);\n      this.notifications = get(data, 'notifications', []);\n    }, err => {\n      console.log('notification err: ', err);\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { GlobalService } from './global.service';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(\n    private http: HttpClient,\n    private _globalServ: GlobalService\n  ) { }\n\n  getNotifications(email: any) {\n    return this.http.get(environment.apiUrl + `/user-notifications/${this._globalServ.idUser}?email=${email}`);\n  }\n\n  readNotifications(notificationId: any, param: any) {\n    return this.http.post(environment.apiUrl + `/read-notification/${notificationId}`, param);\n  }\n\n}\n"],"sourceRoot":""}