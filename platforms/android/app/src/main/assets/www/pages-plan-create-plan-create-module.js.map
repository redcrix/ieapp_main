{"version":3,"sources":["webpack:///./src/app/pages/plan-create/plan-create.module.ts","webpack:///./src/app/pages/plan-create/plan-create.page.html","webpack:///./src/app/pages/plan-create/plan-create.page.scss","webpack:///./src/app/pages/plan-create/plan-create.page.ts"],"names":[],"mappings":"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","file":"pages-plan-create-plan-create-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PlanCreatePage } from './plan-create.page';\n\nimport { ComponentModule } from '../../components/component.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PlanCreatePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ComponentModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PlanCreatePage]\n})\nexport class PlanCreatePageModule {}\n","module.exports = \"<ion-content \\n[scrollEvents]=\\\"true\\\"\\n(ionScroll)=\\\"logScrolling($event)\\\">\\n<toolbar [back]=\\\"true\\\" [title]=\\\"pageTitleName ? ('plan-create.createaPlan' | translate) : ''\\\"></toolbar>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-2\\\"></div>\\n    <div class=\\\"col-md-8\\\">\\n      <h1 class=\\\"title\\\">{{ 'plan-create.createaPlan' | translate }}</h1>\\n      <hr class=\\\"hr-pc pc-margin-top\\\">\\n      <div *ngIf=\\\"_globalServ.planImagePath == null\\\" (click)=\\\"goToselectImage()\\\" class=\\\"box-center-full\\\">\\n        <span [ngClass]=\\\"{'circle-req':_globalServ.planImagePost == null && post == true}\\\" class=\\\"circle\\\">\\n          <span class=\\\"icon fas fa-camera\\\"></span>\\n        </span>\\n      </div>\\n      <img class=\\\"image-plan\\\" (click)=\\\"goToselectImage()\\\" *ngIf=\\\"_globalServ.planImagePath != null\\\" [src]=\\\"_globalServ.planImagePath\\\">\\n      <hr class=\\\"hr-pc\\\">\\n\\n      <form>\\n\\n        <ion-item-divider mode=\\\"md\\\"></ion-item-divider>\\n        <ion-item-divider mode=\\\"md\\\">\\n          <ion-label class=\\\"req\\\" *ngIf=\\\"title == '' && post == true\\\">*</ion-label>\\n          <ion-input [(ngModel)]=\\\"title\\\" [formControl]=\\\"myForm.get('title')\\\" placeholder=\\\"{{ 'plan-create.title' | translate }}\\\"></ion-input>\\n        </ion-item-divider>\\n        <ion-item-divider mode=\\\"md\\\">\\n          <ion-label class=\\\"req\\\" *ngIf=\\\"location == '' && post == true\\\">*</ion-label>\\n          <ion-input [(ngModel)]=\\\"location\\\" [formControl]=\\\"myForm.get('location')\\\" placeholder=\\\"{{ 'plan-create.location' | translate }}\\\"></ion-input>\\n        </ion-item-divider>\\n\\n        <hr class=\\\"hr-pc\\\">\\n        <ion-item (click)=\\\"getPlanCreatedBy()\\\" lines=\\\"none\\\">\\n          <label style=\\\"font-size: 17pt;\\\" position=\\\"fixed\\\">{{ 'plan-create.createBy' | translate }}</label>\\n          <span slot=\\\"end\\\" style=\\\"font-size: 17pt;\\\" class=\\\"secondary-text\\\">\\n            {{ 'plan-create.pick' | translate }} <span class=\\\"fas fa-chevron-right\\\"></span>\\n          </span>\\n        </ion-item>\\n\\n        <ion-item (click)=\\\"getPlanDate()\\\" lines=\\\"none\\\">\\n          <label style=\\\"font-size: 17pt;\\\" position=\\\"fixed\\\"><span class=\\\"req\\\" *ngIf=\\\"planDate == null && post == true\\\">*</span> {{ 'plan-create.planDate' | translate }}</label>\\n          <span slot=\\\"end\\\" style=\\\"font-size: 17pt;\\\" class=\\\"secondary-text\\\">\\n           <span *ngIf=\\\"planDate == null\\\">{{ 'plan-create.pick' | translate }}</span><span *ngIf=\\\"planDate != null\\\">{{planDate | date:'MM/dd/yy'}}</span> <span class=\\\"fas fa-chevron-right\\\"></span>\\n         </span>\\n       </ion-item>\\n\\n       <ion-item (click)=\\\"getLimitDate()\\\" lines=\\\"none\\\">\\n        <label style=\\\"font-size: 17pt;\\\" position=\\\"fixed\\\">{{ 'plan-create.limitDate' | translate }}</label>\\n        <span slot=\\\"end\\\" style=\\\"font-size: 17pt;\\\" class=\\\"secondary-text\\\">\\n          {{ 'plan-create.noLimitDate' | translate }} <span class=\\\"fas fa-chevron-right\\\"></span>\\n        </span>\\n      </ion-item>\\n\\n      <ion-item (click)=\\\"getSupercategory()\\\" lines=\\\"none\\\">\\n        <label style=\\\"font-size: 17pt;\\\" position=\\\"fixed\\\"><span class=\\\"req\\\" *ngIf=\\\"okIdsCategories == false\\\">*</span> {{ 'plan-create.category' | translate }}</label>\\n        <span slot=\\\"end\\\" style=\\\"font-size: 17pt;\\\" class=\\\"secondary-text\\\">\\n          {{ 'plan-create.pick' | translate }} <span class=\\\"fas fa-chevron-right\\\"></span>\\n        </span>\\n      </ion-item>\\n\\n      <ion-item (click)=\\\"getavalibleSeats()\\\" lines=\\\"none\\\">\\n        <label style=\\\"font-size: 17pt;\\\" position=\\\"fixed\\\">{{ 'plan-create.avalibleSeats' | translate }}</label>\\n        <span *ngIf=\\\"avalibleSeats === -1\\\" slot=\\\"end\\\" style=\\\"font-size: 17pt;\\\" class=\\\"secondary-text\\\">\\n          {{ 'plan-create.noLimits' | translate }} <span class=\\\"fas fa-chevron-right\\\"></span>\\n        </span>\\n        <span *ngIf=\\\"avalibleSeats !== -1\\\" slot=\\\"end\\\" style=\\\"font-size: 17pt;\\\" class=\\\"secondary-text\\\">\\n          {{ avalibleSeats }} <span class=\\\"fas fa-chevron-right\\\"></span>\\n        </span>\\n      </ion-item>\\n\\n      <hr class=\\\"hr-pc\\\">\\n      <span class=\\\"req\\\" *ngIf=\\\"details == '' && post == true\\\">*</span>\\n      <ion-textarea [(ngModel)]=\\\"details\\\" [formControl]=\\\"myForm.get('details')\\\" placeholder=\\\"{{ 'plan-create.details' | translate }}\\\"></ion-textarea>\\n      <hr class=\\\"hr-pc\\\">\\n\\n      <div class=\\\"box-center-full btn-pc-box\\\">\\n        <ion-button (click)=\\\"save(myForm.value)\\\" class=\\\"button-one\\\" shape=\\\"round\\\">\\n          <span>{{ 'plan-create.plublishThePlan' | translate }}</span>\\n        </ion-button>\\n      </div>\\n\\n    </form>\\n\\n  </div>\\n  <div class=\\\"col-md-2\\\"></div>\\n</div>\\n</div>\\n</ion-content>\"","module.exports = \".hr-pc {\\n  width: 1500px !important;\\n  background: #e0e0e0 !important;\\n  display: block !important;\\n  margin-left: -400px;\\n  visibility: visible !important; }\\n\\n.pc-margin-top {\\n  margin-top: 34pt;\\n  margin-bottom: 20pt; }\\n\\nion-input {\\n  font-size: 17pt; }\\n\\nion-textarea {\\n  font-size: 17pt;\\n  color: #c8c7cc; }\\n\\n.btn-pc-box {\\n  margin-top: 32pt;\\n  margin-bottom: 36pt; }\\n\\n.image-plan {\\n  width: 95%;\\n  height: 259pt;\\n  border-radius: 10px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FrNDcvaWVhcHAvc3JjL2FwcC9wYWdlcy9wbGFuLWNyZWF0ZS9wbGFuLWNyZWF0ZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx3QkFBd0I7RUFDeEIsOEJBQXlDO0VBQ3pDLHlCQUF5QjtFQUN6QixtQkFBbUI7RUFDbkIsOEJBQThCLEVBQUE7O0FBR2xDO0VBQ0ksZ0JBQWdCO0VBQ2hCLG1CQUFtQixFQUFBOztBQUd2QjtFQUNJLGVBQWUsRUFBQTs7QUFHbkI7RUFDSSxlQUFlO0VBQ2YsY0FBeUIsRUFBQTs7QUFHN0I7RUFDSSxnQkFBZ0I7RUFDaEIsbUJBQW1CLEVBQUE7O0FBR3ZCO0VBQ0ksVUFBVTtFQUNWLGFBQWE7RUFDYixtQkFBbUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BsYW4tY3JlYXRlL3BsYW4tY3JlYXRlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oci1wY3tcbiAgICB3aWR0aDogMTUwMHB4ICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZDogcmdiKDIyNCwgMjI0LCAyMjQpICFpbXBvcnRhbnQ7XG4gICAgZGlzcGxheTogYmxvY2sgIWltcG9ydGFudDtcbiAgICBtYXJnaW4tbGVmdDogLTQwMHB4OyBcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlICFpbXBvcnRhbnQ7XG59XG5cbi5wYy1tYXJnaW4tdG9we1xuICAgIG1hcmdpbi10b3A6IDM0cHQ7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBwdDtcbn1cblxuaW9uLWlucHV0e1xuICAgIGZvbnQtc2l6ZTogMTdwdDtcbn1cblxuaW9uLXRleHRhcmVhe1xuICAgIGZvbnQtc2l6ZTogMTdwdDtcbiAgICBjb2xvcjogcmdiKDIwMCwgMTk5LCAyMDQpO1xufVxuXG4uYnRuLXBjLWJveHtcbiAgICBtYXJnaW4tdG9wOiAzMnB0O1xuICAgIG1hcmdpbi1ib3R0b206IDM2cHQ7XG59XG5cbi5pbWFnZS1wbGFue1xuICAgIHdpZHRoOiA5NSU7XG4gICAgaGVpZ2h0OiAyNTlwdDtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { DatePicker } from '@ionic-native/date-picker/ngx';\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { WebView } from '@ionic-native/ionic-webview/ngx';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { GlobalService } from '../../services/global.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FileTransfer, FileUploadOptions, FileTransferObject } from '@ionic-native/file-transfer/ngx';\nimport { environment } from '../../../environments/environment';\nimport { Location } from '@angular/common';\nimport { NativeGeocoder, NativeGeocoderResult, NativeGeocoderOptions } from '@ionic-native/native-geocoder/ngx';\nimport { Storage } from '@ionic/storage';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\nimport { get } from 'lodash';\nimport { PlanService } from 'src/app/services/plan.service';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-plan-create',\n  templateUrl: './plan-create.page.html',\n  styleUrls: ['./plan-create.page.scss'],\n})\nexport class PlanCreatePage implements OnInit {\n\n  title: any = '';\n  location: any = '';\n  planDate: any;\n  limitDate: any;\n  details: any = '';\n  myForm: FormGroup;\n  avalibleSeats: any;\n  post: boolean;\n  okIdsCategories: boolean;\n  createdBy: any = 1;\n  groupId: any = null;\n  profile: any = {};\n  pageTitleName: any = false;\n\n  constructor(\n    private datePicker: DatePicker,\n    private camera: Camera,\n    private sanitizer: DomSanitizer,\n    private webview: WebView,\n    private router: Router,\n    private _globalServ: GlobalService,\n    fb: FormBuilder,\n    private transfer: FileTransfer,\n    private locationUrl: Location,\n    private nativeGeocoder: NativeGeocoder,\n    private storage: Storage,\n    private actRoute: ActivatedRoute,\n    private _userServ: UserService,\n    private toastController: ToastController,\n    private _planServ: PlanService\n    ) {\n    if (this.actRoute.snapshot.queryParams.data != null) {\n      let getParams = JSON.parse(this.actRoute.snapshot.queryParams.data);\n      this.groupId = getParams.groupId;\n      console.log('groupId: ', this.groupId);\n    }\n\n    this.myForm = fb.group({\n      'title': ['', Validators.compose([Validators.required])],\n      'location': ['', Validators.compose([Validators.required])],\n      'details': ['', Validators.compose([Validators.required])],\n    });\n  }\n\n  ngOnInit() {\n    this._globalServ.idsCategories = null;\n  }\n\n  logScrolling(e){\n    if(e.detail.scrollTop>50){\n      this.pageTitleName = true;\n    } else {\n      this.pageTitleName = false;\n    }\n  }\n\n  ionViewDidEnter() {\n    console.log('hey');\n\n    this._userServ.getPublicProfile(this._globalServ.idUser).subscribe(data => {\n      this.profile = get(data, '[0]', {});\n    }, err => {\n      console.log('err public profile: ', err);\n    });\n\n    this.storage.get('plan-create-seats').then((val) => {\n      this.avalibleSeats = val;\n    });\n    this.storage.get('plan-create-groups').then((val) => {\n      if (val > 0 || val === -2) { // -2: Me, 0> : selected from group list\n        this.groupId = val;\n      }\n    });\n  }\n\n  getPlanCreatedBy() {\n    let navigationExtras: NavigationExtras = {\n      queryParams: {\n        data: JSON.stringify({ 'groupId': this.groupId })\n      }\n    };\n    this.router.navigate(['plan-create-createdby'], navigationExtras);\n  }\n\n  getPlanDate() {\n    let date;\n    if (this.planDate == null) {\n      date = new Date();\n    } else {\n      date = this.planDate;\n    }\n    this.datePicker.show({\n      date: new Date(date),\n      mode: 'date',\n      androidTheme: this.datePicker.ANDROID_THEMES.THEME_HOLO_LIGHT,\n      //minDate:new Date()\n      allowFutureDates: true,\n      allowOldDates: false\n    }).then(\n    date => {\n      console.log('Got date: ', date);\n      this.planDate = date;\n    },\n    err => {\n      console.log('Error occurred while getting date: ', err);\n    }\n    )\n  }\n\n  getLimitDate() {\n    let date;\n    if (this.limitDate == null) {\n      date = new Date();\n    } else {\n      date = this.limitDate;\n    }\n    this.datePicker.show({\n      date: new Date(date),\n      mode: 'date',\n      androidTheme: this.datePicker.ANDROID_THEMES.THEME_HOLO_LIGHT,\n      allowFutureDates: true,\n      allowOldDates: false\n    }).then(\n    date => {\n      console.log('Got date: ', date);\n      this.limitDate = date;\n    },\n    err => {\n      console.log('Error occurred while getting date: ', err);\n    }\n    )\n  }\n\n  getavalibleSeats() {\n    this.router.navigate(['plan-create-seats']);\n  }\n\n  goToselectImage() {\n    let navigationExtras: NavigationExtras = {\n      queryParams: {\n        data: JSON.stringify({ 'plan': true })\n      }\n    };\n    this.router.navigate(['image-cropper'], navigationExtras);\n  }\n\n  getSupercategory() {\n    let navigationExtras: NavigationExtras = {\n      queryParams: {\n        data: JSON.stringify({ 'select': true })\n      }\n    };\n    this.router.navigate(['preferences'], navigationExtras);\n  }\n\n  async showAlert(msg) {\n    const toast = await this.toastController.create({\n      message: msg,\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  doCreatePlan(endpoint, params) {\n    console.log('<<<  starting plan creating....   >>>');\n    /* this._planServ.createPlan(endpoint, params, this._globalServ.planImagePost).subscribe(data => {\n      \n      console.log('<<<<created plan successfully !!!>>>>');\n\n      this._globalServ.planImagePath = null;\n      this._globalServ.planImagePost = null;\n      this.storage.set('plan-create-seats', -1);\n      this.storage.set('plan-create-groups', -1);\n\n      this.router.navigate(['plan-create-success']);\n    }, err => {\n      console.log('err: ', err);\n    }) */\n    const fileTransfer: FileTransferObject = this.transfer.create();\n    let filename = 'planImage_' + Math.random()*100000000000000000;\n    let options: FileUploadOptions = {\n      fileKey: 'image',\n      fileName: filename + '.jpg',\n      params: params,\n    }\n\n    fileTransfer.upload(this._globalServ.planImagePost, environment.apiUrl + `/${endpoint}`, options)\n    .then((data) => {\n      this.showAlert('Created a plan successfully');\n      console.log('<<<<created plan successfully !!!>>>>');\n\n      this._globalServ.planImagePath = null;\n      this._globalServ.planImagePost = null;\n      this.storage.set('plan-create-seats', -1);\n      this.storage.set('plan-create-groups', -1);\n\n      this.router.navigate(['plan-create-success']);\n    }, (err) => {\n      // error\n      console.log('error', err);\n      this.showAlert(err.message);\n    });\n\n  }\n\n  save(value: any) {\n    console.log('here:  ', this.groupId);\n\n    this.post = true;\n    if (this._globalServ.idsCategories != null) {\n      if (this._globalServ.idsCategories.length > 0) {\n        this.okIdsCategories = true;\n      } else {\n        this.okIdsCategories = false;\n      }\n    } else {\n      this.okIdsCategories = false;\n    }\n\n    console.log('plan date: ', this.planDate);\n    console.log('this._globalServ.planImagePost: ', this._globalServ.planImagePost);\n    console.log('this.okIdsCategories:  ', this.okIdsCategories);\n    console.log('this.myForm.valid: ', this.myForm.valid);\n\n    if (this.myForm.valid && this._globalServ.planImagePost != null && this.planDate != null && this.okIdsCategories == true) {\n\n      console.log('save step 1');\n      let optionsGeo: NativeGeocoderOptions = {\n        useLocale: true,\n        maxResults: 1\n      };\n      this.nativeGeocoder.forwardGeocode(value.location, optionsGeo)\n      .then((result: NativeGeocoderResult[]) => {\n        console.log('save step 2');\n        console.log('The coordinates are latitude=' + result[0].latitude + ' and longitude=' + result[0].longitude);\n        const fileTransfer: FileTransferObject = this.transfer.create();\n        let options = {};\n        let endpoint = '';\n\n        if (this.groupId === null || this.groupId < 0) { // use app-add-plan\n          options = {\n            'fk_ceu_user_id': this._globalServ.idUser,\n            'ceu_supercategories_ids': this._globalServ.idsCategories.toString(),\n            'title': value.title,\n            'description': value.details,\n            'plan_date': this.planDate,\n            'address': value.location,\n            'latitude': String(result[0].latitude),\n            'longitude':  String(result[0].longitude)\n          };\n          endpoint = 'app-add-plan';\n        } else { // use add-group-plan\n          if (this.groupId > 0) {\n            options = {\n              'fk_user_id': this._globalServ.idUser,\n              'email': this.profile.email,\n              'seats': this.avalibleSeats,\n              'group_plan_supercategory_ids': this._globalServ.idsCategories.toString(),\n              'title': value.title,\n              'description': value.details,\n              'plan_date': this.planDate,\n              'address': value.location,\n              'latitude': String(result[0].latitude),\n              'longitude':  String(result[0].longitude),\n              'fk_group_id': this.groupId\n            }\n          } else {\n            options = {\n              'fk_user_id': this._globalServ.idUser,\n              'email': this.profile.email,\n              'seats': this.avalibleSeats,\n              'group_plan_supercategory_ids': this._globalServ.idsCategories.toString(),\n              'title': value.title,\n              'description': value.details,\n              'plan_date': this.planDate,\n              'address': value.location,\n              'latitude': String(result[0].latitude),\n              'longitude':  String(result[0].longitude)\n            }\n          }\n          endpoint = 'add-group-plan';\n        }\n        this.doCreatePlan(endpoint, options);\n      })\n      .catch((error: any) => console.log(error));\n    }\n  }\n\n}\n"],"sourceRoot":""}